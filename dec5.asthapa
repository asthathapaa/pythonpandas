{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "1fe17752-f2cc-4d45-9e62-ad30ab69bf66",
   "metadata": {},
   "outputs": [],
   "source": [
    "import pandas as pd\n",
    "import numpy as np"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "8998d796-0ff4-4856-815c-795d5a2dbbe3",
   "metadata": {},
   "outputs": [],
   "source": [
    "data = {'year': [2010, 2011, 2012, 2011, 2012, 2010, 2011, 2012],\n",
    "        'team': ['Bears', 'Bears', 'Bears', 'Packers', 'Packers', 'Lions', 'Lions', 'Lions'],\n",
    "        'wins': [11, 8, 10, 15, 11, 6, 10, 4],\n",
    "        'losses': [5, 8, 6, 1, 5, 10, 6, 12]}\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "de16567a-7ca9-4aa1-9ed7-6532bebb17e2",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "{'year': [2010, 2011, 2012, 2011, 2012, 2010, 2011, 2012],\n",
       " 'team': ['Bears',\n",
       "  'Bears',\n",
       "  'Bears',\n",
       "  'Packers',\n",
       "  'Packers',\n",
       "  'Lions',\n",
       "  'Lions',\n",
       "  'Lions'],\n",
       " 'wins': [11, 8, 10, 15, 11, 6, 10, 4],\n",
       " 'losses': [5, 8, 6, 1, 5, 10, 6, 12]}"
      ]
     },
     "execution_count": 5,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "8383df6f-c6d1-44c0-a1b2-7e2408bce34b",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>year</th>\n",
       "      <th>team</th>\n",
       "      <th>wins</th>\n",
       "      <th>losses</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>2010</td>\n",
       "      <td>Bears</td>\n",
       "      <td>11</td>\n",
       "      <td>5</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2011</td>\n",
       "      <td>Bears</td>\n",
       "      <td>8</td>\n",
       "      <td>8</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>2012</td>\n",
       "      <td>Bears</td>\n",
       "      <td>10</td>\n",
       "      <td>6</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>2011</td>\n",
       "      <td>Packers</td>\n",
       "      <td>15</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>2012</td>\n",
       "      <td>Packers</td>\n",
       "      <td>11</td>\n",
       "      <td>5</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>2010</td>\n",
       "      <td>Lions</td>\n",
       "      <td>6</td>\n",
       "      <td>10</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>2011</td>\n",
       "      <td>Lions</td>\n",
       "      <td>10</td>\n",
       "      <td>6</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>2012</td>\n",
       "      <td>Lions</td>\n",
       "      <td>4</td>\n",
       "      <td>12</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   year     team  wins  losses\n",
       "0  2010    Bears    11       5\n",
       "1  2011    Bears     8       8\n",
       "2  2012    Bears    10       6\n",
       "3  2011  Packers    15       1\n",
       "4  2012  Packers    11       5\n",
       "5  2010    Lions     6      10\n",
       "6  2011    Lions    10       6\n",
       "7  2012    Lions     4      12"
      ]
     },
     "execution_count": 9,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "football = pd.DataFrame(data, columns=['year', 'team', 'wins', 'losses'])\n",
    "football"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "id": "026adbb2-35df-48eb-96a3-d1449648a5a8",
   "metadata": {},
   "outputs": [
    {
     "ename": "TypeError",
     "evalue": "string indices must be integers",
     "output_type": "error",
     "traceback": [
      "\u001b[1;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[1;31mTypeError\u001b[0m                                 Traceback (most recent call last)",
      "Cell \u001b[1;32mIn [15], line 1\u001b[0m\n\u001b[1;32m----> 1\u001b[0m \u001b[43mfootball\u001b[49m\u001b[43m[\u001b[49m\u001b[38;5;124;43m'\u001b[39;49m\u001b[38;5;124;43mteam\u001b[39;49m\u001b[38;5;124;43m'\u001b[39;49m\u001b[43m]\u001b[49m\n",
      "\u001b[1;31mTypeError\u001b[0m: string indices must be integers"
     ]
    }
   ],
   "source": [
    "football['team']"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "id": "6f439db7-7b04-4b51-abe9-1029cf7a2925",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>year</th>\n",
       "      <th>team</th>\n",
       "      <th>wins</th>\n",
       "      <th>losses</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>2010</td>\n",
       "      <td>Bears</td>\n",
       "      <td>11</td>\n",
       "      <td>5</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2011</td>\n",
       "      <td>Bears</td>\n",
       "      <td>8</td>\n",
       "      <td>8</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>2012</td>\n",
       "      <td>Bears</td>\n",
       "      <td>10</td>\n",
       "      <td>6</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>2011</td>\n",
       "      <td>Packers</td>\n",
       "      <td>15</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>2012</td>\n",
       "      <td>Packers</td>\n",
       "      <td>11</td>\n",
       "      <td>5</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>2010</td>\n",
       "      <td>Lions</td>\n",
       "      <td>6</td>\n",
       "      <td>10</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>2011</td>\n",
       "      <td>Lions</td>\n",
       "      <td>10</td>\n",
       "      <td>6</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>2012</td>\n",
       "      <td>Lions</td>\n",
       "      <td>4</td>\n",
       "      <td>12</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   year     team  wins  losses\n",
       "0  2010    Bears    11       5\n",
       "1  2011    Bears     8       8\n",
       "2  2012    Bears    10       6\n",
       "3  2011  Packers    15       1\n",
       "4  2012  Packers    11       5\n",
       "5  2010    Lions     6      10\n",
       "6  2011    Lions    10       6\n",
       "7  2012    Lions     4      12"
      ]
     },
     "execution_count": 16,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "football = pd.DataFrame(data, columns=['year', 'team', 'wins', 'losses'])\n",
    "football"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "id": "db8950a9-cbdb-4985-b929-f23b642da704",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0    2010\n",
       "1    2011\n",
       "2    2012\n",
       "3    2011\n",
       "4    2012\n",
       "5    2010\n",
       "6    2011\n",
       "7    2012\n",
       "Name: year, dtype: int64"
      ]
     },
     "execution_count": 17,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "football['year']\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "id": "9323ff59-3785-4df8-b145-be7586471c3e",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0    2010\n",
       "1    2011\n",
       "2    2012\n",
       "3    2011\n",
       "4    2012\n",
       "5    2010\n",
       "6    2011\n",
       "7    2012\n",
       "Name: year, dtype: int64"
      ]
     },
     "execution_count": 18,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "football['year']"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "id": "e4039d45-bdb7-450b-adbd-b0af8e31e383",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>year</th>\n",
       "      <th>team</th>\n",
       "      <th>wins</th>\n",
       "      <th>losses</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>2012</td>\n",
       "      <td>Bears</td>\n",
       "      <td>10</td>\n",
       "      <td>6</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>2012</td>\n",
       "      <td>Packers</td>\n",
       "      <td>11</td>\n",
       "      <td>5</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>2012</td>\n",
       "      <td>Lions</td>\n",
       "      <td>4</td>\n",
       "      <td>12</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   year     team  wins  losses\n",
       "2  2012    Bears    10       6\n",
       "4  2012  Packers    11       5\n",
       "7  2012    Lions     4      12"
      ]
     },
     "execution_count": 20,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "football[football['year']>2011]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "id": "485c8300-a77d-4176-9869-e87bd270acb6",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>year</th>\n",
       "      <th>team</th>\n",
       "      <th>wins</th>\n",
       "      <th>losses</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>2010</td>\n",
       "      <td>Bears</td>\n",
       "      <td>11</td>\n",
       "      <td>5</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>2012</td>\n",
       "      <td>Bears</td>\n",
       "      <td>10</td>\n",
       "      <td>6</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>2011</td>\n",
       "      <td>Packers</td>\n",
       "      <td>15</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>2012</td>\n",
       "      <td>Packers</td>\n",
       "      <td>11</td>\n",
       "      <td>5</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>2011</td>\n",
       "      <td>Lions</td>\n",
       "      <td>10</td>\n",
       "      <td>6</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   year     team  wins  losses\n",
       "0  2010    Bears    11       5\n",
       "2  2012    Bears    10       6\n",
       "3  2011  Packers    15       1\n",
       "4  2012  Packers    11       5\n",
       "6  2011    Lions    10       6"
      ]
     },
     "execution_count": 21,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "football[football['wins']>=10]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "id": "96e31b53-2974-4127-892f-8e08efa7d74b",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>year</th>\n",
       "      <th>team</th>\n",
       "      <th>wins</th>\n",
       "      <th>losses</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>2010</td>\n",
       "      <td>Bears</td>\n",
       "      <td>11</td>\n",
       "      <td>5</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2011</td>\n",
       "      <td>Bears</td>\n",
       "      <td>8</td>\n",
       "      <td>8</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>2011</td>\n",
       "      <td>Packers</td>\n",
       "      <td>15</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>2010</td>\n",
       "      <td>Lions</td>\n",
       "      <td>6</td>\n",
       "      <td>10</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>2011</td>\n",
       "      <td>Lions</td>\n",
       "      <td>10</td>\n",
       "      <td>6</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   year     team  wins  losses\n",
       "0  2010    Bears    11       5\n",
       "1  2011    Bears     8       8\n",
       "3  2011  Packers    15       1\n",
       "5  2010    Lions     6      10\n",
       "6  2011    Lions    10       6"
      ]
     },
     "execution_count": 22,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "football[football['year']<2012]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "id": "afff2ccd-ce54-4b57-9b53-59bba4535331",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>year</th>\n",
       "      <th>team</th>\n",
       "      <th>wins</th>\n",
       "      <th>losses</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>2010</td>\n",
       "      <td>Bears</td>\n",
       "      <td>11</td>\n",
       "      <td>5</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>2011</td>\n",
       "      <td>Packers</td>\n",
       "      <td>15</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   year     team  wins  losses\n",
       "0  2010    Bears    11       5\n",
       "3  2011  Packers    15       1"
      ]
     },
     "execution_count": 23,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "football[(football['year']<2012) & (football['wins']>10)]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "id": "a952fa63-86a1-42b7-ba8c-dc663686c117",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<AxesSubplot: >"
      ]
     },
     "execution_count": 24,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "football[football['year']<2012].plot()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "id": "1f2bb216-4d5f-4826-8079-55c9faaa0f64",
   "metadata": {},
   "outputs": [],
   "source": [
    " plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 27,
   "id": "b5d7f160-b6eb-4df5-9a90-b5df154e4a80",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>losses</th>\n",
       "      <th>wins</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>5</td>\n",
       "      <td>11</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>8</td>\n",
       "      <td>8</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>1</td>\n",
       "      <td>15</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>10</td>\n",
       "      <td>6</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>6</td>\n",
       "      <td>10</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   losses  wins\n",
       "0       5    11\n",
       "1       8     8\n",
       "3       1    15\n",
       "5      10     6\n",
       "6       6    10"
      ]
     },
     "execution_count": 27,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "football[football['year']<2012][['losses','wins']]\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 28,
   "id": "a91cb3cb-4034-4ab9-af7d-b38b4bfd6a95",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "x=football[football['year']<2012][['losses','wins']].plot()\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 29,
   "id": "ace3de21-2cc8-4931-b157-4f4569aac0d0",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "iVBORw0KGgoAAAANSUhEUgAAAh8AAAGYCAYAAADiAIAsAAAAOXRFWHRTb2Z0d2FyZQBNYXRwbG90bGliIHZlcnNpb24zLjYuMiwgaHR0cHM6Ly9tYXRwbG90bGliLm9yZy8o6BhiAAAACXBIWXMAAA9hAAAPYQGoP6dpAAAg3klEQVR4nO3df1RUdR7/8dcAOoDCICgKBcKW5c/UJN0kFdOzxqaruaW2aqYnLWPzV5lydtUsDd1zKrJc3dxNq9W001Ezy8pj4o/8lSL2yx+QqKSi5taMUqLB/f7R1/l+STTJO59h4Pk45/4xc+/M5w2ze3x25zLjsCzLEgAAgCFB/h4AAADULsQHAAAwivgAAABGER8AAMAo4gMAABhFfAAAAKOIDwAAYBTxAQAAjArx9wC/VF5ermPHjikiIkIOh8Pf4wAAgKtgWZbOnDmj+Ph4BQVd+dxGtYuPY8eOKSEhwd9jAACA36CoqEjXX3/9FY+pdvEREREh6efhIyMj/TwNAAC4Gh6PRwkJCd5/x6+k2sXHxbdaIiMjiQ8AAALM1VwywQWnAADAKOIDAAAYRXwAAACjqt01HwAA/BZlZWW6cOGCv8eo0erWrfurf0Z7NYgPAEBAsyxLxcXF+v777/09So0XFBSk5ORk1a1b95qeh/gAAAS0i+ERGxur8PBwPqDSRy5+COjx48eVmJh4Tb9n4gMAELDKysq84RETE+PvcWq8Ro0a6dixY/rpp59Up06d3/w8XHAKAAhYF6/xCA8P9/MktcPFt1vKysqu6XmIDwBAwOOtFjPs+j0THwAAwCjiAwAAP0hLS9O4ceP8PYZfcMEpAKBGSpr8nrG1Ds2629haNQFnPgAAgFHEBwAAfvbdd9/pgQceUIMGDRQeHq709HTl5+d79x8+fFh9+vRRgwYNVK9ePbVq1Urvv/++97GDBw9Wo0aNFBYWpmbNmmnhwoXexxYVFWnAgAGKiopSdHS0+vbtq0OHDnn35+TkqGPHjqpXr56ioqKUmpqqw4cP+/Tn5W0XAGY95TKwhtv3awA2evDBB5Wfn69Vq1YpMjJSkyZN0h//+Ed99dVXqlOnjjIyMnT+/Hlt3LhR9erV01dffaX69etLkqZMmaKvvvpKa9asUcOGDVVQUKAff/xR0s9/ityrVy/dfvvt2rRpk0JCQjRjxgzddddd+uyzzxQUFKR+/fpp5MiRevPNN3X+/Hnt2LHD5389RHwAAOBHF6Pjk08+UefOnSVJixcvVkJCglauXKn77rtPR44c0Z///Ge1adNGkvS73/3O+/gjR46offv2SklJkSQlJSV59y1btkzl5eX697//7Q2KhQsXKioqSjk5OUpJSZHb7Vbv3r11ww03SJJatGjh85+Zt10AAPCjvXv3KiQkRJ06dfLeFxMTo5tvvll79+6VJI0ZM0YzZsxQamqqpk2bps8++8x77OjRo7V06VK1a9dOTz75pLZs2eLdt2fPHhUUFCgiIkL169dX/fr1FR0drXPnzunrr79WdHS0HnzwQfXq1Ut9+vTRiy++qOPHj/v8ZyY+AACo5h566CEdPHhQQ4cO1eeff66UlBS99NJLkqT09HQdPnxY48eP17Fjx9SjRw898cQTkqSzZ8+qQ4cOysvLq7AdOHBAf/nLXyT9fCZk69at6ty5s5YtW6abbrpJ27Zt8+nPQ3wAAOBHLVq00E8//aTt27d77zt9+rT279+vli1beu9LSEjQI488ouXLl+vxxx/XggULvPsaNWqkYcOG6b///a+ys7P1yiuvSJJuvfVW5efnKzY2VjfeeGOFzeX6f9dftW/fXpmZmdqyZYtat26tJUuW+PRnJj4AAPCjZs2aqW/fvho5cqQ2b96sPXv2aMiQIbruuuvUt29fSdK4ceP04YcfqrCwULm5uVq/fr332oypU6fqnXfeUUFBgb788kutXr3au2/w4MFq2LCh+vbtq02bNqmwsFA5OTkaM2aMvvnmGxUWFiozM1Nbt27V4cOH9dFHHyk/P9/n131wwSkAoEYKpA/+WrhwocaOHavevXvr/Pnz6tq1q95//33vN8eWlZUpIyND33zzjSIjI3XXXXfphRdekPTzl71lZmbq0KFDCgsLU5cuXbR06VJJP3/h3saNGzVp0iT1799fZ86c0XXXXacePXooMjJSP/74o/bt26fXXntNp0+fVlxcnDIyMvTwww/79Od1WJZl+XSFKvJ4PHK5XHK73YqMjPT3OADsxp/awkbnzp1TYWGhkpOTFRoa6u9xarwr/b6r8u83b7sAAACjiA8AAGAU8QEAAIwiPgAAgFHEBwAAMIr4AAAARhEfAADAKOIDAAAYRXwAAFCNLVq0SFFRUf4ew1bEBwAA1djAgQN14MABf49hK77bBQBQM5n4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\n",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "x=football[football['year']<2012][['losses','wins','team']].plot(kind='bar')\n",
    "plt.show()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 30,
   "id": "7eabf4d3-1ee8-4110-8246-f358aa604669",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "x=football[football['year']<2012][['losses','wins','team']].plot(kind='bar')\n",
    "plt.title(\"Team Win vs Losses before 2012\")\n",
    "plt.xlabel(\"No of Teams\")\n",
    "plt.ylabel(\"No of Games\")\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 31,
   "id": "372bf0d9-b2ce-4baf-b685-3d0400e9ed1f",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>losses</th>\n",
       "      <th>wins</th>\n",
       "      <th>team</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>5</td>\n",
       "      <td>11</td>\n",
       "      <td>Bears</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>8</td>\n",
       "      <td>8</td>\n",
       "      <td>Bears</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>1</td>\n",
       "      <td>15</td>\n",
       "      <td>Packers</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>10</td>\n",
       "      <td>6</td>\n",
       "      <td>Lions</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>6</td>\n",
       "      <td>10</td>\n",
       "      <td>Lions</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   losses  wins     team\n",
       "0       5    11    Bears\n",
       "1       8     8    Bears\n",
       "3       1    15  Packers\n",
       "5      10     6    Lions\n",
       "6       6    10    Lions"
      ]
     },
     "execution_count": 31,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "football[football['year']<2012][['losses','wins','team']]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 33,
   "id": "be6697e6-6e19-4e11-8d23-636ea910ed51",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>losses</th>\n",
       "      <th>wins</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>team</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>Bears</th>\n",
       "      <td>5</td>\n",
       "      <td>11</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Bears</th>\n",
       "      <td>8</td>\n",
       "      <td>8</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Packers</th>\n",
       "      <td>1</td>\n",
       "      <td>15</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Lions</th>\n",
       "      <td>10</td>\n",
       "      <td>6</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Lions</th>\n",
       "      <td>6</td>\n",
       "      <td>10</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "         losses  wins\n",
       "team                 \n",
       "Bears         5    11\n",
       "Bears         8     8\n",
       "Packers       1    15\n",
       "Lions        10     6\n",
       "Lions         6    10"
      ]
     },
     "execution_count": 33,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "football[football['year']<2012][['losses','wins','team']].set_index('team')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 46,
   "id": "fe52cc14-56c3-459a-b9d4-f5168215bf5a",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>losses</th>\n",
       "      <th>wins</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>team</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>Bears</th>\n",
       "      <td>5</td>\n",
       "      <td>11</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Bears</th>\n",
       "      <td>8</td>\n",
       "      <td>8</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Packers</th>\n",
       "      <td>1</td>\n",
       "      <td>15</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Lions</th>\n",
       "      <td>10</td>\n",
       "      <td>6</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Lions</th>\n",
       "      <td>6</td>\n",
       "      <td>10</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "         losses  wins\n",
       "team                 \n",
       "Bears         5    11\n",
       "Bears         8     8\n",
       "Packers       1    15\n",
       "Lions        10     6\n",
       "Lions         6    10"
      ]
     },
     "execution_count": 46,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "football[football['year']<2012][['losses','wins','team']].set_index('team')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 47,
   "id": "4af0212b-ad25-4951-8702-3d48e40bdb46",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>losses</th>\n",
       "      <th>wins</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>team</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>Bears</th>\n",
       "      <td>5</td>\n",
       "      <td>11</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Bears</th>\n",
       "      <td>8</td>\n",
       "      <td>8</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Packers</th>\n",
       "      <td>1</td>\n",
       "      <td>15</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Lions</th>\n",
       "      <td>10</td>\n",
       "      <td>6</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Lions</th>\n",
       "      <td>6</td>\n",
       "      <td>10</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "         losses  wins\n",
       "team                 \n",
       "Bears         5    11\n",
       "Bears         8     8\n",
       "Packers       1    15\n",
       "Lions        10     6\n",
       "Lions         6    10"
      ]
     },
     "execution_count": 47,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "game = football[football['year']<2012][['losses','wins','team']].set_index('team')\n",
    "game"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 48,
   "id": "4851ef06-275d-441d-b9d2-27d680907ec1",
   "metadata": {
    "collapsed": true,
    "jupyter": {
     "outputs_hidden": true
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>losses</th>\n",
       "      <th>wins</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>team</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>Bears</th>\n",
       "      <td>5</td>\n",
       "      <td>11</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Bears</th>\n",
       "      <td>8</td>\n",
       "      <td>8</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Packers</th>\n",
       "      <td>1</td>\n",
       "      <td>15</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Lions</th>\n",
       "      <td>10</td>\n",
       "      <td>6</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Lions</th>\n",
       "      <td>6</td>\n",
       "      <td>10</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "         losses  wins\n",
       "team                 \n",
       "Bears         5    11\n",
       "Bears         8     8\n",
       "Packers       1    15\n",
       "Lions        10     6\n",
       "Lions         6    10"
      ]
     },
     "execution_count": 48,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "game.plot(kind='bar')\n",
    "game\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 49,
   "id": "1df2412c-a89c-4105-a356-3e123b55994a",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "game = football[football['year']<2012][['losses','wins','team']].set_index('team').plot(kind='bar')\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "ec0117c2-18c1-49a2-9d48-2f382c72d235",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.10.8"
  },
  "toc-showcode": true,
  "toc-showmarkdowntxt": false
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
